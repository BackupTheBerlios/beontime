package fr.umlv.smoreau.beontime.model.base;

import java.io.Serializable;

import fr.umlv.smoreau.beontime.model.Group;
import fr.umlv.smoreau.beontime.model.association.ParticipeGroupSubjectCoursePK;
import fr.umlv.smoreau.beontime.model.timetable.Course;
import fr.umlv.smoreau.beontime.model.timetable.Subject;
import fr.umlv.smoreau.beontime.model.user.Person;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseParticipeGroupSubjectCoursePK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private Person _idEnseignant;
	private Subject _idMatiere;
	private Group _idGroupe;
	private Course _idCours;

	public BaseParticipeGroupSubjectCoursePK () {}
	
	public BaseParticipeGroupSubjectCoursePK (
		Person _idEnseignant,
		Subject _idMatiere,
		Group _idGroupe,
		Course _idCours) {

		this.setIdTeacher(_idEnseignant);
		this.setIdSubject(_idMatiere);
		this.setIdGroup(_idGroupe);
		this.setIdCourse(_idCours);
	}


	public Person getIdTeacher () {
		return _idEnseignant;
	}

	public void setIdTeacher (Person _idEnseignant) {
		hashCode = Integer.MIN_VALUE;
		this._idEnseignant = _idEnseignant;
	}

	public Subject getIdSubject () {
		return _idMatiere;
	}

	public void setIdSubject (Subject _idMatiere) {
		hashCode = Integer.MIN_VALUE;
		this._idMatiere = _idMatiere;
	}

	public Group getIdGroup () {
		return _idGroupe;
	}

	public void setIdGroup (Group _idGroupe) {
		hashCode = Integer.MIN_VALUE;
		this._idGroupe = _idGroupe;
	}

	public Course getIdCourse () {
		return _idCours;
	}

	public void setIdCourse (Course _idCours) {
		hashCode = Integer.MIN_VALUE;
		this._idCours = _idCours;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof ParticipeGroupSubjectCoursePK)) return false;
		else {
			ParticipeGroupSubjectCoursePK mObj = (ParticipeGroupSubjectCoursePK) obj;
			if (null != this.getIdTeacher() && null != mObj.getIdTeacher()) {
				if (!this.getIdTeacher().equals(mObj.getIdTeacher())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getIdSubject() && null != mObj.getIdSubject()) {
				if (!this.getIdSubject().equals(mObj.getIdSubject())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getIdGroup() && null != mObj.getIdGroup()) {
				if (!this.getIdGroup().equals(mObj.getIdGroup())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getIdCourse() && null != mObj.getIdCourse()) {
				if (!this.getIdCourse().equals(mObj.getIdCourse())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getIdTeacher()) {
				sb.append(this.getIdTeacher().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getIdSubject()) {
				sb.append(this.getIdSubject().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getIdGroup()) {
				sb.append(this.getIdGroup().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getIdCourse()) {
				sb.append(this.getIdCourse().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}